@tailwind base;
@tailwind components;
@tailwind utilities;
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  -moz-appearance: textfield;
}

body {
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.logincontainer {
  background-image: url("./../public/petroself.jpg");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  min-height: 100vh;
  overflow-x: hidden;

  width: 100%;
}
.unlogin {
  animation: login 4s ease-in-out 1s infinite alternate;
  border-radius: 37px;
}
.ratecont {
  fill: #22c55e;
  margin-right: 2px;
  border-radius: 999px;
  background-color: green;
  background-position: center;
  animation: rater 4s ease-in-out 1s infinite alternate;
}

@keyframes rater {
  0% {
    border: 1.5px solid #7aee72;
  }
  20% {
    border: 1.5px solid #4ef542;
  }
  40% {
    border: 1.5px solid #111110;
  }
  60% {
    border: 1.5px solid #3d15c1;
  }
  80% {
    border: 1.5px solid #42f5ef;
  }
  100% {
    border: 1.5px solid #ed32a6;
  }
}
.select-container {
  display: flex;
  align-items: center;
  margin-bottom: 20px;
}

.label {
  margin-right: 10px;
}

.select {
  position: relative;
  padding: 8px;
  border: 1px solid #4ef542;
  border-radius: 5px;
  font-size: 16px;
  background-color: #f8f8f8;
  outline: none; /* Remove default focus border */
}
.select option {
  background-color: #fff; /* Background color of options */
  color: #333; /* Text color of options */
  padding: 8px;
  font-size: 16px;
  border: 1px solid #4ef542;
}

/* Style the options on hover */
.select option:hover {
  background-color: #ddd; /* Background color of options on hover */
  color: #4ef542; /* Text color of options on hover */
}
.heros {
  filter: brightness(40%) grayscale(50%);
}
.herotext {
  box-shadow: inset 10px 10px 20px 15px rgba(25, 247, 110, 0.5);
}

.select:hover,
.select:focus {
  border-color: #525151; /* Change border color on hover/focus */
}

.anthe {
  position: relative;
  text-decoration: none; /* Remove default underline */
  color: inherit;
}

.anthe:after {
  content: "";
  position: absolute;
  width: 0%; /* Initial width set to 0 */
  height: 1px; /* Line height */
  background-color: black; /* Line color */
  left: 50%;
  bottom: -1px; /* Position at the bottom of the text */
  transform: translateX(-50%); /* Center the line horizontally */
  transition: width 0.5s ease-in-out; /* Animation properties */
}

.anthe:hover:after {
  width: 100%; /* Animate to full width on hover */
}

.headercontainer {
  animation: headercon 4s ease-in-out 1s infinite alternate;
  border-radius: 37px;
}
@keyframes login {
  0% {
    border: 1.5px solid #7aee72;
  }
  20% {
    border: 1.5px solid #4ef542;
  }
  40% {
    border: 1.5px solid #f5c149;
  }
  60% {
    border: 1.5px solid #ec7d7d;
  }
  80% {
    border: 1.5px solid #42f5ef;
  }
  100% {
    border: 1.5px solid #ed32a6;
  }
}
@keyframes headercon {
  0% {
    border-bottom: 2px solid #7aee72;
  }
  20% {
    border-bottom: 2px solid #4ef542;
  }
  40% {
    border-bottom: 2px solid #f5c149;
  }
  60% {
    border-bottom: 2px solid #ec7d7d;
  }
  80% {
    border-bottom: 2px solid #42f5ef;
  }
  100% {
    border-bottom: 2px solid #ed32a6;
  }
}
.fues {
  animation: logintex 0.4s ease-in 0s 1 alternate;
}

.logintex {
  animation: logintex 0.4s ease-in 0s 1 alternate;
}
.email {
  animation: loginemail 0.4s ease-in 0s 1 alternate;
}
.password {
  animation: loginpassowd 0.4s ease-in 0s 1 alternate;
}
.dont,
.butt {
  animation: logindont 0.4s ease-in 0s 1 alternate;
}
@keyframes logintex {
  0% {
    transform: translateY(-120px);
  }

  100% {
    transform: translate(0px, 0%);
  }
}

@keyframes loginemail {
  0% {
    transform: translate(-120px, 100%);
  }

  100% {
    transform: translate(0px, 0%);
  }
}

@keyframes loginpassowd {
  0% {
    transform: translate(120px, 100%);
  }

  100% {
    transform: translate(0px, 0%);
  }
}
.logo {
  animation: loginemail 0.4s ease-in 0s 1 alternate;
}

@keyframes logindont {
  0% {
    transform: translateY(120px);
  }
  /* 20% {
    border: 1.5px solid #8b30ec;
  }
  40% {
    border: 1.5px solid #f5c149;
  }
  60% {
    border: 1.5px solid #ec7d7d;
  }
  80% {
    border: 1.5px solid #65c6f3;
  } */
  100% {
    transform: translate(0px, 0%);
  }
}
.email,
.password {
  border: 1px solid #4ef542;
  background: transparent;
  outline: none;
  border-radius: 199px;
}
.butt:hover {
  scale: 105%;
}
input:checked {
  outline: 1px solid #4ef542;
  border-radius: 71px;
}
.singlestation:hover .stationimage {
  overflow: hidden;
  animation: imagestation 2s ease-out 0s 1 alternate;
}
@keyframes imagestation {
  0% {
    transform: scale(1, 1);
  }
  20% {
    transform: scale(1.1, 1.1);
  }

  60% {
    transform: rotate(2deg);
  }
  100% {
    transform: rotate(-2deg);
  }
}
.fuelimage:hover {
  overflow: hidden;
  animation: imagestation 2s ease-out 0s 1 alternate;
}
/*
 * react-circular-progressbar styles
 * All of the styles in this file are configurable!
 */

.CircularProgressbar {
  /*
   * This fixes an issue where the CircularProgressbar svg has
   * 0 width inside a "display: flex" container, and thus not visible.
   */
  width: 100%;
  /*
   * This fixes a centering issue with CircularProgressbarWithChildren:
   * https://github.com/kevinsqi/react-circular-progressbar/issues/94
   */
  vertical-align: middle;
}

.CircularProgressbar .CircularProgressbar-path {
  stroke: #4ef542;
  stroke-linecap: round;
  -webkit-transition: stroke-dashoffset 0.5s ease 0s;
  transition: stroke-dashoffset 0.5s ease 0s;
}

.CircularProgressbar .CircularProgressbar-trail {
  stroke: #d6d6d6;
  /* Used when trail is not full diameter, i.e. when props.circleRatio is set */
  stroke-linecap: round;
}

.CircularProgressbar .CircularProgressbar-text {
  fill: #4ef542;
  font-size: 30px;
  dominant-baseline: middle;
  text-anchor: middle;
}

.CircularProgressbar .CircularProgressbar-background {
  fill: #4ef542;
}

/*
 * Sample background styles. Use these with e.g.:
 *
 *   <CircularProgressbar
 *     className="CircularProgressbar-inverted"
 *     background
 *     percentage={50}
 *   />
 */
.CircularProgressbar.CircularProgressbar-inverted
  .CircularProgressbar-background {
  fill: #3e98c7;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-text {
  fill: #fff;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-path {
  stroke: #fff;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-trail {
  stroke: transparent;
}
